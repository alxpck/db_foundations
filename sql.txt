#####################################################
# SELECT  ###########################################
#####################################################

SELECT * FROM movies;
-- Select everything from the table named movies

SELECT title, year FROM movies;
-- Select the colums title and year (in that order) from the table named movies

SELECT movies.title, movies.year FROM movies;
-- Same as above, just more verbose/exact
-- Select the colums title and year (in that order) from the table named movies

#####################################################
# WHERE  ############################################
#####################################################

SELECT * FROM movies WHERE year = 1999;
-- Select everything from the movies table where the year equals 1999

SELECT * FROM movies WHERE year != 1999;
-- Select everything from the movies table where the year does NOT equal 1999

SELECT * FROM movies WHERE year > 1999;
-- Select everything from the movies table where the year is greater than 1999

SELECT * FROM movies WHERE year >= 1999;
-- Select everything from the movies table where the year is greater than or equal to 1999

SELECT * FROM movies WHERE year < 1999;
-- Select everything from the movies table where the year is less than 1999

SELECT * FROM movies WHERE year <= 1999;
-- Select everything from the movies table where the year is less than or equal to 1999

SELECT * FROM movies WHERE year = 1999 AND title = "The Matrix";
-- Select everything from the movies table where the year is equal to 1999 and the title is equal to The Matrix

SELECT * FROM movies WHERE year = 1998 OR year = 2000;
-- Select everything from the movies table where the year is equal to 1998 or 2000

SELECT * FROM movies WHERE year BETWEEN 1998 AND 2000;
-- Select everything from the movies table where the year is between 1998 and 2000

SELECT * FROM movies WHERE title LIKE "godfather";
-- Select everything from the movies table where the title starts with the word godfather (didn't work because no strings in the title started with godfather)

SELECT * FROM movies WHERE title LIKE "%godfather";
-- Select everything from the movies table where the title contains the word godfather. The percent sign is a wildcard that allows the string to start with any character(s) before godfather (worked)

SELECT * FROM movies WHERE title LIKE "%godfather%";
-- Select everything from the movies table where the title contains the word godfather. The percent signs are wildcards that allows the string to start with any character(s) before godfather and end with any character(s) after godfather (worked) 
-- The LIKE clause can work with strings that are not case sensitive

#####################################################
# ORDER BY  #########################################
#####################################################

SELECT * FROM movies ORDER BY year;
-- Select everything from movies and order by the year in ascending order

SELECT * FROM movies ORDER BY year DESC;
-- Select everything from movies and order by the year in descending order

SELECT * FROM movies ORDER BY year ASC;
-- Select everything from movies and order by the year in ascending order (explicitly stated)

SELECT * FROM movies ORDER BY year ASC, title DESC;
-- Select everything from movies and order by the year in ascending order (explicitly stated), and then within each year in descending order by title

#####################################################
# LIMIT  ############################################
#####################################################

SELECT * FROM movies LIMIT 10;
-- Select everything from the movies table and show the first 10 results.

SELECT * FROM movies LIMIT 10 OFFSET 0;
-- Same as above but explicitly state the offset.
-- Select everything from the movies table and show the first 10 results (show results 0 - 9)

SELECT * FROM movies LIMIT 10 OFFSET 10;
-- Select everything from the movies table and show the second 10 results (show results 10 - 19)

SELECT * FROM movies LIMIT 10 OFFSET 20;
-- Select everything from the movies table and show the third set of 10 results (show results 20 - 29)

SELECT * FROM movies LIMIT 20, 10;
-- Same as above but written differently. The first number is the offset and the second number is the limit.
-- Select everything from the movies table and show the third set of 10 results (show results 20 - 29). 

NOTE... some clients automatically add a limit to your query (of say 1000 results). If your dataset has more results than the automatically applied limit you'll get incomplete results